name: Telisik Backend Production Deployment
on:
  push:
    branches:
      - development
    paths:
      - backend/**
jobs:
  deploy:
    name: Deploy backend
    runs-on: ubuntu-latest
    steps:
      # This step checks out a copy of your repository.
      - uses: actions/checkout@v2

      - name: "Create .env file"
        run: |
          touch ./backend/.env
          echo "APP_NAME=${{ secrets.APP_NAME }}" >> ./backend/.env
          echo "MODE=${{ secrets.MODE }}" >> ./backend/.env
          echo "SERVER=${{ secrets.SERVER }}" >> ./backend/.env
          echo "PORT=${{ secrets.PORT }}" >> ./backend/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> ./backend/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> ./backend/.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> ./backend/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ./backend/.env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> ./backend/.env
          echo "DB_POOL_MAX_CONN=${{ secrets.DB_POOL_MAX_CONN }}" >> ./backend/.env
          echo "DB_POOL_IDLE_CONN=${{ secrets.DB_POOL_IDLE_CONN }}" >> ./backend/.env
          echo "DB_POOL_LIFE_TIME=${{ secrets.DB_POOL_LIFE_TIME }}" >> ./backend/.env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> ./backend/.env
          echo "JWT_EXPIRE_MINUTES_COUNT=${{ secrets.JWT_EXPIRE_MINUTES_COUNT }}" >> ./backend/.env
          cat ./backend/.env

      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: cd backend && flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
